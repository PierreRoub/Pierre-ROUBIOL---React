{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Num\\u00e9rique/Ranch/Ranch/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Num\\u00e9rique/Ranch/Ranch/drafts/Counters.sol\":{\"keccak256\":\"0x1c07e1f2cd3eaa9a72a47f67e930fa104f8751cdfc3a32af79b7e1157416bfde\",\"urls\":[\"bzz-raw://b95d0d54315a145ec34c0df018606728bdd5c31faa4169ae44dfe1bf92466215\",\"dweb:/ipfs/QmbZ2UPpuz9kvdmzes4FUC9Vk3f4LQx9tZFyJ17xRZfVLd\"]},\"/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Num\\u00e9rique/Ranch/Ranch/math/SafeMath.sol\":{\"keccak256\":\"0x16ccc0917e94fc7e77a18dbaa73b5e1e7ae65de56d9380ff34b4ab65b0efa088\",\"urls\":[\"bzz-raw://993c0543a3850c5f55b47a9766220ffa4e6c94c2f6e56192aaba23b1c660555a\",\"dweb:/ipfs/QmaEGuc5ZihgsXYm4VZnMFF1bEaVCaDWsapk6yQJifZprQ\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209001fba2d54d7b9ff68556851c47ed230cb949d888b2b51a028df6ec1f96f9c964736f6c634300050c0032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209001fba2d54d7b9ff68556851c47ed230cb949d888b2b51a028df6ec1f96f9c964736f6c634300050c0032",
  "sourceMap": "650:780:14:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "650:780:14:-;;;;;;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\r\n\r\nimport \"../math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Pierre ROUBIOL\\Desktop\\ESILV\\A5_S9\\Monnaie Numérique\\Ranch\\Ranch\\drafts\\Counters.sol",
  "ast": {
    "absolutePath": "/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Numérique/Ranch/Ranch/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2278
      ]
    },
    "id": 2279,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2231,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:14"
      },
      {
        "absolutePath": "/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Numérique/Ranch/Ranch/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 2232,
        "nodeType": "ImportDirective",
        "scope": 2279,
        "sourceUnit": 2468,
        "src": "36:30:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2278,
        "linearizedBaseContracts": [
          2278
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2235,
            "libraryName": {
              "contractScope": null,
              "id": 2233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2467,
              "src": "680:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2467",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "674:27:14",
            "typeName": {
              "id": 2234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2238,
            "members": [
              {
                "constant": false,
                "id": 2237,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 2238,
                "src": "1052:14:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2236,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2278,
            "src": "709:379:14",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "1170:40:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2245,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2240,
                      "src": "1188:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2237,
                    "src": "1188:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2244,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "1181:21:14"
                }
              ]
            },
            "documentation": null,
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1113:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2239,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1113:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:25:14"
            },
            "returnParameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1161:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1160:9:14"
            },
            "scope": 2278,
            "src": "1096:114:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2260,
              "nodeType": "Block",
              "src": "1271:38:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2254,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "1282:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2237,
                      "src": "1282:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1282:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:19:14"
                }
              ]
            },
            "documentation": null,
            "id": 2261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2251,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2261,
                  "src": "1237:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2250,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1237:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:25:14"
            },
            "returnParameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:14"
            },
            "scope": 2278,
            "src": "1218:91:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "1370:57:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2266,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "1381:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2237,
                      "src": "1381:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1417:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2269,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "1398:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "1398:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2422,
                        "src": "1398:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1398:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1381:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:38:14"
                }
              ]
            },
            "documentation": null,
            "id": 2277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2277,
                  "src": "1336:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2262,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1336:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1335:25:14"
            },
            "returnParameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:14"
            },
            "scope": 2278,
            "src": "1317:110:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2279,
        "src": "650:780:14"
      }
    ],
    "src": "0:1430:14"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Numérique/Ranch/Ranch/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2278
      ]
    },
    "id": 2279,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2231,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:14"
      },
      {
        "absolutePath": "/C/Users/Pierre ROUBIOL/Desktop/ESILV/A5_S9/Monnaie Numérique/Ranch/Ranch/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 2232,
        "nodeType": "ImportDirective",
        "scope": 2279,
        "sourceUnit": 2468,
        "src": "36:30:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2278,
        "linearizedBaseContracts": [
          2278
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2235,
            "libraryName": {
              "contractScope": null,
              "id": 2233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2467,
              "src": "680:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2467",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "674:27:14",
            "typeName": {
              "id": 2234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2238,
            "members": [
              {
                "constant": false,
                "id": 2237,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 2238,
                "src": "1052:14:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2236,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2278,
            "src": "709:379:14",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "1170:40:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2245,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2240,
                      "src": "1188:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2237,
                    "src": "1188:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2244,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "1181:21:14"
                }
              ]
            },
            "documentation": null,
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1113:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2239,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1113:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:25:14"
            },
            "returnParameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1161:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1160:9:14"
            },
            "scope": 2278,
            "src": "1096:114:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2260,
              "nodeType": "Block",
              "src": "1271:38:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2254,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "1282:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2237,
                      "src": "1282:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1282:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:19:14"
                }
              ]
            },
            "documentation": null,
            "id": 2261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2251,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2261,
                  "src": "1237:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2250,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1237:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:25:14"
            },
            "returnParameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:14"
            },
            "scope": 2278,
            "src": "1218:91:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "1370:57:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2266,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "1381:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2237,
                      "src": "1381:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1417:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2269,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "1398:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "1398:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2422,
                        "src": "1398:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1398:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1381:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:38:14"
                }
              ]
            },
            "documentation": null,
            "id": 2277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2277,
                  "src": "1336:23:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2262,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2238,
                    "src": "1336:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1335:25:14"
            },
            "returnParameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:14"
            },
            "scope": 2278,
            "src": "1317:110:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2279,
        "src": "650:780:14"
      }
    ],
    "src": "0:1430:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-27T10:05:00.270Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}